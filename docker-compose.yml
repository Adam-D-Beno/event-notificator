version: '3.8'

services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: event_notificator
    ports:
      - "5433:5432"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
      image: confluentinc/cp-kafka:7.6.0
      hostname: kafka1
      container_name: kafka1
      ports:
        - "9092:9092"
        - "19092:19092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092, EXTERNAL://localhost:19092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, EXTERNAL:PLAINTEXT
        KAFKA_MIN_INSYNC_REPLICAS: 2
      depends_on:
        - zookeeper

  kafka2:
      image: confluentinc/cp-kafka:7.6.0
      hostname: kafka2
      container_name: kafka2
      ports:
        - "9093:9093"
        - "19093:19093"
      environment:
        KAFKA_BROKER_ID: 2
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093, EXTERNAL://localhost:19093
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, EXTERNAL:PLAINTEXT
        KAFKA_MIN_INSYNC_REPLICAS: 2
      depends_on:
        - zookeeper

  kafka3:
      image: confluentinc/cp-kafka:7.6.0
      hostname: kafka3
      container_name: kafka3
      ports:
        - "9094:9094"
        - "19094:19094"
      environment:
        KAFKA_BROKER_ID: 3
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094, EXTERNAL://localhost:19094
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, EXTERNAL:PLAINTEXT
        KAFKA_MIN_INSYNC_REPLICAS: 2
      depends_on:
        - zookeeper

  topic-init:
      image: confluentinc/cp-kafka:7.6.0
      container_name: topic-init
      depends_on:
        - kafka1
        - kafka2
        - kafka3
      entrypoint: bash
      command: >
        -c "
          until kafka-topics --list --bootstrap-server kafka1:9092; do
            echo 'Ожидание Kafka...'; sleep 2;
          done &&
          kafka-topics --create --topic change-event-topic --partitions 3 --replication-factor 3 --if-not-exists --bootstrap-server kafka1:9092 &&
          kafka-configs --alter --entity-type topics --entity-name change-event-topic --add-config min.insync.replicas=2 --bootstrap-server kafka1:9092
        "

  kafdrop:
      image: obsidiandynamics/kafdrop:latest
      container_name: kafdrop
      ports:
        - "9000:9000"
      environment:
        KAFKA_BROKERCONNECT: "kafka1:9092,kafka2:9093,kafka3:9094"
        JVM_OPTS: "-Xms32M -Xmx64M"
        SERVER_SERVLET_CONTEXTPATH: "/"
      depends_on:
        - kafka1
        - kafka2
        - kafka3